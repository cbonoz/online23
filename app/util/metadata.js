// Compiled data contract ABI.
export const DATA_CONTRACT = {
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_assertion",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_wormholeRelayer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_umaAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "AccessEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "sourceChain",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "crossChainSet",
          "type": "bool"
        }
      ],
      "name": "MessageReceived",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertTruth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assertionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossChainAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssertion",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ],
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.Assertion",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestmessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oov3",
      "outputs": [
        {
          "internalType": "contract OptimisticOracleV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "targetChain",
          "type": "uint16"
        }
      ],
      "name": "quoteCrossChainmessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint16",
          "name": "sourceChain",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "deliveryHash",
          "type": "bytes32"
        }
      ],
      "name": "receiveWormholeMessages",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestAccess",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "seenDeliveryVaaHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "targetChain",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "sendCrossChainmessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleAndGetAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccess",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "umaAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wormholeRelayer",
      "outputs": [
        {
          "internalType": "contract IWormholeRelayer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "800:6131:0:-:0;;;2568:639;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2786:52:0;;;;2848:8;:21;;-1:-1:-1;;;;;;2848:21:0;2859:10;2848:21;;;2879:4;:12;2886:5;2879:4;:12;:::i;:::-;-1:-1:-1;2901:11:0;:26;2915:12;2901:11;:26;:::i;:::-;-1:-1:-1;2937:9:0;:22;2949:10;2937:9;:22;:::i;:::-;-1:-1:-1;2969:13:0;:33;2991:10;2969:13;:33;:::i;:::-;-1:-1:-1;3012:10:0;:24;;-1:-1:-1;;;;;;3012:24:0;-1:-1:-1;;;;;3012:24:0;;;;;-1:-1:-1;3046:10:0;3052:4;-1:-1:-1;3046:10:0;:::i;:::-;-1:-1:-1;3066:6:0;:13;;3075:4;-1:-1:-1;;3066:13:0;;;;;;;3089;:21;;;;;;;-1:-1:-1;3120:11:0;:15;3144:4;:56;;-1:-1:-1;;;;;;3144:56:0;-1:-1:-1;;;;;3144:56:0;;;;;;;;;;-1:-1:-1;800:6131:0;;-1:-1:-1;;;;800:6131:0;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:5:o;991:177::-;1070:13;;-1:-1:-1;;;;;1112:31:5;;1102:42;;1092:70;;1158:1;1155;1148:12;1092:70;991:177;;;:::o;1173:1143::-;1328:6;1336;1344;1352;1360;1368;1421:3;1409:9;1400:7;1396:23;1392:33;1389:53;;;1438:1;1435;1428:12;1389:53;1465:16;;-1:-1:-1;;;;;1530:14:5;;;1527:34;;;1557:1;1554;1547:12;1527:34;1580:61;1633:7;1624:6;1613:9;1609:22;1580:61;:::i;:::-;1570:71;;1687:2;1676:9;1672:18;1666:25;1650:41;;1716:2;1706:8;1703:16;1700:36;;;1732:1;1729;1722:12;1700:36;1755:63;1810:7;1799:8;1788:9;1784:24;1755:63;:::i;:::-;1745:73;;1864:2;1853:9;1849:18;1843:25;1827:41;;1893:2;1883:8;1880:16;1877:36;;;1909:1;1906;1899:12;1877:36;1932:63;1987:7;1976:8;1965:9;1961:24;1932:63;:::i;:::-;1922:73;;2041:2;2030:9;2026:18;2020:25;2004:41;;2070:2;2060:8;2057:16;2054:36;;;2086:1;2083;2076:12;2054:36;;2109:63;2164:7;2153:8;2142:9;2138:24;2109:63;:::i;:::-;2099:73;;;2191:50;2236:3;2225:9;2221:19;2191:50;:::i;:::-;2181:60;;2260:50;2305:3;2294:9;2290:19;2260:50;:::i;:::-;2250:60;;1173:1143;;;;;;;;:::o;2321:380::-;2400:1;2396:12;;;;2443;;;2464:61;;2518:4;2510:6;2506:17;2496:27;;2464:61;2571:2;2563:6;2560:14;2540:18;2537:38;2534:161;;2617:10;2612:3;2608:20;2605:1;2598:31;2652:4;2649:1;2642:15;2680:4;2677:1;2670:15;2534:161;;2321:380;;;:::o;2832:545::-;2934:2;2929:3;2926:11;2923:448;;;2970:1;2995:5;2991:2;2984:17;3040:4;3036:2;3026:19;3110:2;3098:10;3094:19;3091:1;3087:27;3081:4;3077:38;3146:4;3134:10;3131:20;3128:47;;;-1:-1:-1;3169:4:5;3128:47;3224:2;3219:3;3215:12;3212:1;3208:20;3202:4;3198:31;3188:41;;3279:82;3297:2;3290:5;3287:13;3279:82;;;3342:17;;;3323:1;3312:13;3279:82;;;3283:3;;;2923:448;2832:545;;;:::o;3553:1352::-;3673:10;;-1:-1:-1;;;;;3695:30:5;;3692:56;;;3728:18;;:::i;:::-;3757:97;3847:6;3807:38;3839:4;3833:11;3807:38;:::i;:::-;3801:4;3757:97;:::i;:::-;3909:4;;3973:2;3962:14;;3990:1;3985:663;;;;4692:1;4709:6;4706:89;;;-1:-1:-1;4761:19:5;;;4755:26;4706:89;-1:-1:-1;;3510:1:5;3506:11;;;3502:24;3498:29;3488:40;3534:1;3530:11;;;3485:57;4808:81;;3955:944;;3985:663;2779:1;2772:14;;;2816:4;2803:18;;-1:-1:-1;;4021:20:5;;;4139:236;4153:7;4150:1;4147:14;4139:236;;;4242:19;;;4236:26;4221:42;;4334:27;;;;4302:1;4290:14;;;;4169:19;;4139:236;;;4143:3;4403:6;4394:7;4391:19;4388:201;;;4464:19;;;4458:26;-1:-1:-1;;4547:1:5;4543:14;;;4559:3;4539:24;4535:37;4531:42;4516:58;4501:74;;4388:201;-1:-1:-1;;;;;4635:1:5;4619:14;;;4615:22;4602:36;;-1:-1:-1;3553:1352:5:o;4910:1350::-;800:6131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "800:6131:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:18;;;;;;;;;;-1:-1:-1;1000:18:0;;;;;;;;;;;275:14:5;;268:22;250:41;;238:2;223:18;1000::0;;;;;;;;1785:26;;;;;;;;;;;;;;;;;;;448:25:5;;;436:2;421:18;1785:26:0;302:177:5;1370:53:0;;;;;;;;;;-1:-1:-1;1370:53:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;1430:39;;;;;;;;;;-1:-1:-1;1430:39:0;;;;-1:-1:-1;;;;;1430:39:0;;;;;;-1:-1:-1;;;;;1007:32:5;;;989:51;;977:2;962:18;1430:39:0;807:239:5;4925:105:0;;;;;;;;;;;;;:::i;:::-;;1923:153;;;;;;;;;;;;;:::i;5806:1123::-;;;;;;:::i;:::-;;:::i;5281:519::-;;;;;;:::i;:::-;;:::i;1818:32::-;;;;;;;;;;-1:-1:-1;1818:32:0;;;;-1:-1:-1;;;;;1818:32:0;;;1246:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4357:562::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;2218:117::-;;;;;;;;;;;;;:::i;2520:41::-;;;;;;;;;;-1:-1:-1;2520:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;2341:173;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1856:27::-;;;;;;;;;;;;;;;;5036:239;;;;;;;;;;-1:-1:-1;5036:239:0;;;;;:::i;:::-;;:::i;2082:130::-;;;;;;;;;;;;;:::i;1089:26::-;;;;;;;;;;;;;;;;849:23;;;;;;;;;;-1:-1:-1;849:23:0;;;;-1:-1:-1;;;;;849:23:0;;;1150:49;;;;;;;;;;;;;;;3398:953;;;:::i;1280:25::-;;;;;;;;;;-1:-1:-1;1280:25:0;;;;-1:-1:-1;;;;;1280:25:0;;;4925:105;4988:8;;-1:-1:-1;;;;;4988:8:0;4974:10;:22;4966:31;;;;;;5017:6;;;-1:-1:-1;;5007:16:0;;5017:6;;;;5016:7;5007:16;;;4925:105::o;1923:153::-;1977:4;;:92;;-1:-1:-1;;;1977:92:0;;-1:-1:-1;;;;;1977:4:0;;;;:28;;:92;;2019:13;;2054:4;;1977:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:11;:106;1923:153::o;5806:1123::-;6197:10;-1:-1:-1;;;;;6219:15:0;6197:38;;6189:71;;;;-1:-1:-1;;;6189:71:0;;12621:2:5;6189:71:0;;;12603:21:5;12660:2;12640:18;;;12633:30;-1:-1:-1;;;12679:18:5;;;12672:50;12739:18;;6189:71:0;;;;;;;;;6335:35;;;;:21;:35;;;;;;;;6334:36;6313:108;;;;-1:-1:-1;;;6313:108:0;;12970:2:5;6313:108:0;;;12952:21:5;13009:2;12989:18;;;12982:30;13048:27;13028:18;;;13021:55;13093:18;;6313:108:0;12768:349:5;6313:108:0;6431:35;;;;:21;:35;;;;;;;:42;;-1:-1:-1;;6431:42:0;6469:4;6431:42;;;6589:72;;6431:35;;6589:72;;;;;;;;;;:::i;:::-;6742:17;;6547:114;;-1:-1:-1;6547:114:0;-1:-1:-1;;;;;;6742:27:0;;;:17;;:27;:58;;;;;6789:11;6773:27;;:12;;:27;6742:58;6738:109;;;6816:13;:20;;-1:-1:-1;;6816:20:0;6832:4;6816:20;;;6738:109;6908:13;;6862:60;;;;;;6878:7;;6887:11;;6900:6;;6908:13;;;6862:60;:::i;:::-;;;;;;;;6179:750;;5806:1123;;;;;:::o;5281:519::-;5433:12;5448:35;5471:11;5448:22;:35::i;:::-;5433:50;;5514:4;5501:9;:17;5493:26;;;;;;5529:15;-1:-1:-1;;;;;5529:32:0;;5569:4;5588:11;5613:13;5651:7;5660:10;5640:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5696:1;1234:6;5529:264;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5423:377;5281:519;;;:::o;1246:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4357:562::-;4733:10;4546:7;4723:21;;;:9;:21;;;;;;4438:13;;;;;;;;4546:7;;;;;;;;4680:4;;4698:11;;4723:21;;:32;;;;;;;;;;;;;;;;;4747:3;4723:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4792:17;;4823:12;;4792:17;4849:8;4871:6;;4891:11;;4659:253;;4769:9;;-1:-1:-1;;;;;4792:17:0;;;;4823:12;4849:8;;4871:6;;;4891:11;4659:253;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4357:562;;;;;;;;;:::o;2218:117::-;2292:4;;2316:11;;2292:36;;-1:-1:-1;;;2292:36:0;;;;;448:25:5;;;;2269:4:0;;-1:-1:-1;;;;;2292:4:0;;:23;;421:18:5;;2292:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2285:43;;2218:117;:::o;2341:173::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:4:0;;2495:11;;2477:30;;-1:-1:-1;;;2477:30:0;;;;;448:25:5;;;;-1:-1:-1;;;;;;;2477:4:0;;;;:17;;421:18:5;;2477:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5036:239::-;5158:110;;-1:-1:-1;;;5158:110:0;;18589:6:5;18577:19;;5158:110:0;;;18559:38:5;5123:12:0;18613:18:5;;;18606:34;;;1234:6:0;18656:18:5;;;18649:34;5123:12:0;5158:15;-1:-1:-1;;;;;5158:37:0;;;;18532:18:5;;5158:110:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5147:121:0;5036:239;-1:-1:-1;;5036:239:0:o;2082:130::-;2160:4;;2193:11;;2160:45;;-1:-1:-1;;;2160:45:0;;;;;448:25:5;;;;2137:4:0;;-1:-1:-1;;;;;2160:4:0;;:32;;421:18:5;;2160:45:0;;;;;;;;;;;;;;;;;;;;;;;3398:953;3480:6;;3447:13;;3480:6;;3472:58;;;;-1:-1:-1;;;3472:58:0;;19146:2:5;3472:58:0;;;19128:21:5;19185:2;19165:18;;;19158:30;19224:34;19204:18;;;19197:62;-1:-1:-1;;;19275:18:5;;;19268:37;19322:19;;3472:58:0;18944:403:5;3472:58:0;3602:13;:20;;;;;:::i;:::-;:25;;-1:-1:-1;3598:319:0;;3750:20;:18;:20::i;:::-;3725:181;;;;-1:-1:-1;;;3725:181:0;;19554:2:5;3725:181:0;;;19536:21:5;19593:3;19573:18;;;19566:31;19633:34;19613:18;;;19606:62;19704:34;19684:18;;;19677:62;19776:34;19755:19;;;19748:63;-1:-1:-1;;;19827:19:5;;;19820:37;19874:19;;3725:181:0;19352:547:5;3725:181:0;4007:12;;:17;4003:163;;4065:13;;;;4040:115;;;;-1:-1:-1;;;4040:115:0;;20106:2:5;4040:115:0;;;20088:21:5;20145:2;20125:18;;;20118:30;20184:34;20164:18;;;20157:62;-1:-1:-1;;;20235:18:5;;;20228:41;20286:19;;4040:115:0;19904:407:5;4040:115:0;4191:10;4181:21;;;;:9;:21;;;;;;;;4176:111;;4223:23;;4235:10;;4223:23;;;;;4275:1;4260:11;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;4176:111:0;4306:10;4296:21;;;;:9;:21;;;;;:28;;-1:-1:-1;;4296:28:0;4320:4;4296:28;;;;;;4334:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3398:953;:::o;484:180:5:-;543:6;596:2;584:9;575:7;571:23;567:32;564:52;;;612:1;609;602:12;564:52;-1:-1:-1;635:23:5;;484:180;-1:-1:-1;484:180:5:o;1051:127::-;1112:10;1107:3;1103:20;1100:1;1093:31;1143:4;1140:1;1133:15;1167:4;1164:1;1157:15;1183:255;1255:2;1249:9;1297:6;1285:19;;1334:18;1319:34;;1355:22;;;1316:62;1313:88;;;1381:18;;:::i;:::-;1417:2;1410:22;1183:255;:::o;1443:275::-;1514:2;1508:9;1579:2;1560:13;;-1:-1:-1;;1556:27:5;1544:40;;1614:18;1599:34;;1635:22;;;1596:62;1593:88;;;1661:18;;:::i;:::-;1697:2;1690:22;1443:275;;-1:-1:-1;1443:275:5:o;1723:186::-;1771:4;1804:18;1796:6;1793:30;1790:56;;;1826:18;;:::i;:::-;-1:-1:-1;1892:2:5;1871:15;-1:-1:-1;;1867:29:5;1898:4;1863:40;;1723:186::o;1914:336::-;1978:5;2007:52;2023:35;2051:6;2023:35;:::i;:::-;2007:52;:::i;:::-;1998:61;;2082:6;2075:5;2068:21;2122:3;2113:6;2108:3;2104:16;2101:25;2098:45;;;2139:1;2136;2129:12;2098:45;2188:6;2183:3;2176:4;2169:5;2165:16;2152:43;2242:1;2235:4;2226:6;2219:5;2215:18;2211:29;2204:40;1914:336;;;;;:::o;2255:220::-;2297:5;2350:3;2343:4;2335:6;2331:17;2327:27;2317:55;;2368:1;2365;2358:12;2317:55;2390:79;2465:3;2456:6;2443:20;2436:4;2428:6;2424:17;2390:79;:::i;:::-;2381:88;2255:220;-1:-1:-1;;;2255:220:5:o;2480:159::-;2547:20;;2607:6;2596:18;;2586:29;;2576:57;;2629:1;2626;2619:12;2576:57;2480:159;;;:::o;2644:1573::-;2781:6;2789;2797;2805;2813;2866:3;2854:9;2845:7;2841:23;2837:33;2834:53;;;2883:1;2880;2873:12;2834:53;2923:9;2910:23;2952:18;2993:2;2985:6;2982:14;2979:34;;;3009:1;3006;2999:12;2979:34;3032:49;3073:7;3064:6;3053:9;3049:22;3032:49;:::i;:::-;3022:59;;3100:2;3090:12;;3155:2;3144:9;3140:18;3127:32;3184:2;3174:8;3171:16;3168:36;;;3200:1;3197;3190:12;3168:36;3223:24;;3278:4;3270:13;;3266:27;-1:-1:-1;3256:55:5;;3307:1;3304;3297:12;3256:55;3343:2;3330:16;3365:2;3361;3358:10;3355:36;;;3371:18;;:::i;:::-;3417:2;3414:1;3410:10;3440:28;3464:2;3460;3456:11;3440:28;:::i;:::-;3502:15;;;3572:11;;;3568:20;;;3533:12;;;;3600:19;;;3597:39;;;3632:1;3629;3622:12;3597:39;3664:2;3660;3656:11;3645:22;;3676:352;3692:6;3687:3;3684:15;3676:352;;;3778:3;3765:17;3814:2;3801:11;3798:19;3795:109;;;3858:1;3887:2;3883;3876:14;3795:109;3929:56;3977:7;3972:2;3958:11;3954:2;3950:20;3946:29;3929:56;:::i;:::-;3917:69;;-1:-1:-1;3709:12:5;;;;4006;;;;3676:352;;;4047:5;4037:15;;;;;;;;;4099:2;4088:9;4084:18;4071:32;4061:42;;4122:37;4155:2;4144:9;4140:18;4122:37;:::i;:::-;2644:1573;;;;-1:-1:-1;2644:1573:5;;4206:3;4191:19;4178:33;;2644:1573;-1:-1:-1;;2644:1573:5:o;4222:131::-;-1:-1:-1;;;;;4297:31:5;;4287:42;;4277:70;;4343:1;4340;4333:12;4277:70;4222:131;:::o;4358:657::-;4444:6;4452;4460;4513:2;4501:9;4492:7;4488:23;4484:32;4481:52;;;4529:1;4526;4519:12;4481:52;4552:28;4570:9;4552:28;:::i;:::-;4542:38;;4630:2;4619:9;4615:18;4602:32;4643:31;4668:5;4643:31;:::i;:::-;4693:5;-1:-1:-1;4749:2:5;4734:18;;4721:32;4776:18;4765:30;;4762:50;;;4808:1;4805;4798:12;4762:50;4831:22;;4884:4;4876:13;;4872:27;-1:-1:-1;4862:55:5;;4913:1;4910;4903:12;4862:55;4936:73;5001:7;4996:2;4983:16;4978:2;4974;4970:11;4936:73;:::i;:::-;4926:83;;;4358:657;;;;;:::o;5383:250::-;5468:1;5478:113;5492:6;5489:1;5486:13;5478:113;;;5568:11;;;5562:18;5549:11;;;5542:39;5514:2;5507:10;5478:113;;;-1:-1:-1;;5625:1:5;5607:16;;5600:27;5383:250::o;5638:271::-;5680:3;5718:5;5712:12;5745:6;5740:3;5733:19;5761:76;5830:6;5823:4;5818:3;5814:14;5807:4;5800:5;5796:16;5761:76;:::i;:::-;5891:2;5870:15;-1:-1:-1;;5866:29:5;5857:39;;;;5898:4;5853:50;;5638:271;-1:-1:-1;;5638:271:5:o;5914:220::-;6063:2;6052:9;6045:21;6026:4;6083:45;6124:2;6113:9;6109:18;6101:6;6083:45;:::i;6139:1157::-;6529:4;6558:3;6588:2;6577:9;6570:21;6614:45;6655:2;6644:9;6640:18;6632:6;6614:45;:::i;:::-;6600:59;;6707:9;6699:6;6695:22;6690:2;6679:9;6675:18;6668:50;6741:33;6767:6;6759;6741:33;:::i;:::-;6727:47;;6822:9;6814:6;6810:22;6805:2;6794:9;6790:18;6783:50;6856:33;6882:6;6874;6856:33;:::i;:::-;6842:47;;6937:9;6929:6;6925:22;6920:2;6909:9;6905:18;6898:50;6965:33;6991:6;6983;6965:33;:::i;:::-;-1:-1:-1;;;;;7073:15:5;;;7067:3;7052:19;;7045:44;7025:3;7105:19;;7098:35;;;;-1:-1:-1;;7170:15:5;;;;7164:3;7149:19;;7142:44;7230:14;7223:22;7217:3;7202:19;;7195:51;7277:3;7262:19;7255:35;;;;6957:41;6139:1157;-1:-1:-1;;;;6139:1157:5:o;7301:247::-;7360:6;7413:2;7401:9;7392:7;7388:23;7384:32;7381:52;;;7429:1;7426;7419:12;7381:52;7468:9;7455:23;7487:31;7512:5;7487:31;:::i;8144:1640::-;8387:13;;7658:12;;7651:20;7644:28;7632:41;;7736:4;7725:16;;;7719:23;7712:31;7705:39;7689:14;;;7682:63;7808:4;7797:16;;;7791:23;7784:31;7777:39;7761:14;;;7754:63;7863:4;7852:16;;;7846:23;-1:-1:-1;;;;;7939:21:5;;;7923:14;;;7916:45;8014:4;8003:16;;;7997:23;7993:32;;7977:14;;;7970:56;8447:17;;;8441:24;764:31;;8551:4;8536:20;;752:44;8594:17;;;8588:24;8113:18;8102:30;8670:4;8655:20;;8090:43;8713:17;;8707:24;84:13;77:21;8787:4;8772:20;;65:34;8830:17;;;8824:24;764:31;;;8867:6;8946:18;;;752:44;;;;8330:3;8315:19;;;8824:24;9014:4;9006:6;9002:17;8996:24;8974:46;;9039:6;9054:53;9103:2;9092:9;9088:18;9072:14;8113:18;8102:30;8090:43;;8037:102;9054:53;9156:4;9148:6;9144:17;9138:24;9116:46;;9181:6;9196:51;9243:2;9232:9;9228:18;9212:14;84:13;77:21;65:34;;14:91;9196:51;9284:4;9272:17;;9266:24;9309:6;9331:18;;;9324:30;;;;9400:15;;;9394:22;9385:6;9370:22;;9363:54;9463:15;;;9457:22;9448:6;9433:22;;9426:54;9517:15;;9511:22;-1:-1:-1;;;;;764:31:5;;;9621:6;9606:22;;752:44;9666:15;;;9660:22;764:31;;;9770:6;9755:22;;752:44;9660:22;-1:-1:-1;9691:87:5;669:133;9971:184;10029:6;10082:2;10070:9;10061:7;10057:23;10053:32;10050:52;;;10098:1;10095;10088:12;10050:52;10121:28;10139:9;10121:28;:::i;10392:380::-;10471:1;10467:12;;;;10514;;;10535:61;;10589:4;10581:6;10577:17;10567:27;;10535:61;10642:2;10634:6;10631:14;10611:18;10608:38;10605:161;;10688:10;10683:3;10679:20;10676:1;10669:31;10723:4;10720:1;10713:15;10751:4;10748:1;10741:15;10605:161;;10392:380;;;:::o;10902:1323::-;11074:2;11063:9;11056:21;11037:4;11097:1;11130:6;11124:13;11160:3;11182:1;11210:9;11206:2;11202:18;11192:28;;11270:2;11259:9;11255:18;11292;11282:61;;11336:4;11328:6;11324:17;11314:27;;11282:61;11362:2;11410;11402:6;11399:14;11379:18;11376:38;11373:165;;-1:-1:-1;;;11437:33:5;;11493:4;11490:1;11483:15;11523:4;11444:3;11511:17;11373:165;11609:2;11594:18;;5315:19;;;5358:14;;;11637:18;11664:128;;;;11806:1;11801:314;;;;11630:485;;11664:128;-1:-1:-1;;11697:24:5;;11685:37;;11765:14;;11758:22;11755:1;11751:30;11742:40;;;-1:-1:-1;11664:128:5;;11801:314;10849:1;10842:14;;;10886:4;10873:18;;11895:1;11909:165;11923:6;11920:1;11917:13;11909:165;;;12001:14;;11988:11;;;11981:35;12044:16;;;;11938:10;;11909:165;;;12094:11;;;-1:-1:-1;;11630:485:5;;;12132:3;12124:11;;12144:75;12215:2;12204:9;12200:18;12192:6;-1:-1:-1;;;;;764:31:5;752:44;;669:133;12144:75;;;;;;;10902:1323;;;;;:::o;12230:184::-;12300:6;12353:2;12341:9;12332:7;12328:23;12324:32;12321:52;;;12369:1;12366;12359:12;12321:52;-1:-1:-1;12392:16:5;;12230:184;-1:-1:-1;12230:184:5:o;13122:792::-;13219:6;13227;13280:2;13268:9;13259:7;13255:23;13251:32;13248:52;;;13296:1;13293;13286:12;13248:52;13329:9;13323:16;13362:18;13354:6;13351:30;13348:50;;;13394:1;13391;13384:12;13348:50;13417:22;;13470:4;13462:13;;13458:27;-1:-1:-1;13448:55:5;;13499:1;13496;13489:12;13448:55;13528:2;13522:9;13553:48;13569:31;13597:2;13569:31;:::i;13553:48::-;13624:2;13617:5;13610:17;13666:7;13659:4;13654:2;13650;13646:11;13642:22;13639:35;13636:55;;;13687:1;13684;13677:12;13636:55;13700:71;13768:2;13761:4;13754:5;13750:16;13743:4;13739:2;13735:13;13700:71;:::i;:::-;13790:5;13780:15;;;;;13838:4;13827:9;13823:20;13817:27;13853:31;13878:5;13853:31;:::i;:::-;13903:5;13893:15;;;13122:792;;;;;:::o;13919:482::-;14144:3;14133:9;14126:22;14107:4;14165:46;14206:3;14195:9;14191:19;14183:6;14165:46;:::i;:::-;14259:6;14247:19;;;;14242:2;14227:18;;14220:47;-1:-1:-1;;;;;;14303:32:5;;;;14298:2;14283:18;;14276:60;14379:14;14372:22;14367:2;14352:18;;;14345:50;14157:54;13919:482;-1:-1:-1;13919:482:5:o;14406:317::-;14583:2;14572:9;14565:21;14546:4;14603:45;14644:2;14633:9;14629:18;14621:6;14603:45;:::i;:::-;14595:53;;14713:1;14709;14704:3;14700:11;14696:19;14688:6;14684:32;14679:2;14668:9;14664:18;14657:60;14406:317;;;;;:::o;14728:550::-;15005:6;14993:19;;14975:38;;-1:-1:-1;;;;;15049:32:5;;15044:2;15029:18;;15022:60;15069:3;15113:2;15098:18;;15091:31;;;-1:-1:-1;;15139:46:5;;15165:19;;15157:6;15139:46;:::i;:::-;15216:2;15201:18;;15194:34;;;;-1:-1:-1;15259:3:5;15244:19;15237:35;15131:54;14728:550;-1:-1:-1;;;14728:550:5:o;15283:175::-;15361:13;;15414:18;15403:30;;15393:41;;15383:69;;15448:1;15445;15438:12;15463:206;15532:6;15585:2;15573:9;15564:7;15560:23;15556:32;15553:52;;;15601:1;15598;15591:12;15553:52;15624:39;15653:9;15624:39;:::i;15674:164::-;15750:13;;15799;;15792:21;15782:32;;15772:60;;15828:1;15825;15818:12;15843:202;15910:6;15963:2;15951:9;15942:7;15938:23;15934:32;15931:52;;;15979:1;15976;15969:12;15931:52;16002:37;16029:9;16002:37;:::i;16050:138::-;16129:13;;16151:31;16129:13;16151:31;:::i;16193:875::-;16276:5;16324:4;16312:9;16307:3;16303:19;16299:30;16296:50;;;16342:1;16339;16332:12;16296:50;16375:2;16369:9;16417:4;16409:6;16405:17;16488:6;16476:10;16473:22;16452:18;16440:10;16437:34;16434:62;16431:88;;;16499:18;;:::i;:::-;16535:2;16528:22;16568:6;-1:-1:-1;16568:6:5;16598:37;16625:9;16598:37;:::i;:::-;16590:6;16583:53;16669:46;16711:2;16700:9;16696:18;16669:46;:::i;:::-;16664:2;16656:6;16652:15;16645:71;16749:46;16791:2;16780:9;16776:18;16749:46;:::i;:::-;16744:2;16736:6;16732:15;16725:71;16841:2;16830:9;16826:18;16820:25;16854:33;16879:7;16854:33;:::i;:::-;16915:2;16903:15;;16896:32;16973:3;16958:19;;16952:26;16987:33;16952:26;16987:33;:::i;:::-;17048:3;17036:16;;;;17029:33;16193:875;;-1:-1:-1;;16193:875:5:o;17073:1273::-;17169:6;17222:3;17210:9;17201:7;17197:23;17193:33;17190:53;;;17239:1;17236;17229:12;17190:53;17265:22;;:::i;:::-;17310:74;17376:7;17365:9;17310:74;:::i;:::-;17303:5;17296:89;17419:50;17464:3;17453:9;17449:19;17419:50;:::i;:::-;17412:4;17405:5;17401:16;17394:76;17504:49;17548:3;17537:9;17533:19;17504:49;:::i;:::-;17497:4;17490:5;17486:16;17479:75;17588:47;17630:3;17619:9;17615:19;17588:47;:::i;:::-;17581:4;17574:5;17570:16;17563:73;17655:3;17692:49;17737:2;17726:9;17722:18;17692:49;:::i;:::-;17685:4;17678:5;17674:16;17667:75;17761:3;17797:48;17841:2;17830:9;17826:18;17797:48;:::i;:::-;17791:3;17784:5;17780:15;17773:73;17865:3;17901:46;17943:2;17932:9;17928:18;17901:46;:::i;:::-;17895:3;17888:5;17884:15;17877:71;17967:3;18024:2;18013:9;18009:18;18003:25;17997:3;17990:5;17986:15;17979:50;18082:6;18071:9;18067:22;18061:29;18056:2;18049:5;18045:14;18038:53;18144:3;18133:9;18129:19;18123:26;18118:2;18111:5;18107:14;18100:50;18182;18227:3;18216:9;18212:19;18182:50;:::i;:::-;18177:2;18170:5;18166:14;18159:74;18265:50;18310:3;18299:9;18295:19;18265:50;:::i;:::-;18249:14;;;18242:74;-1:-1:-1;18253:5:5;;17073:1273;-1:-1:-1;;;;;17073:1273:5:o;18694:245::-;18773:6;18781;18834:2;18822:9;18813:7;18809:23;18805:32;18802:52;;;18850:1;18847;18840:12;18802:52;-1:-1:-1;;18873:16:5;;18929:2;18914:18;;;18908:25;18873:16;;18908:25;;-1:-1:-1;18694:245:5:o;20316:222::-;20381:9;;;20402:10;;;20399:133;;;20454:10;20449:3;20445:20;20442:1;20435:31;20489:4;20486:1;20479:15;20517:4;20514:1;20507:15;20399:133;20316:222;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "17": [
        {
          "start": 941,
          "length": 32
        },
        {
          "start": 1192,
          "length": 32
        },
        {
          "start": 1600,
          "length": 32
        },
        {
          "start": 3040,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "active()": "02fb0c5e",
    "assertTruth()": "3421390b",
    "assertionId()": "0d80da74",
    "crossChainAddress()": "59910010",
    "crossChainId()": "a2d2cb64",
    "deployer()": "d5f39488",
    "getAssertion()": "9a3ddabc",
    "getAssertionResult()": "7facaf3f",
    "getMetadata()": "7a5b4f59",
    "hasAccess(address)": "95a078e8",
    "latestmessage()": "76f64722",
    "oov3()": "21d06bfd",
    "quoteCrossChainmessage(uint16)": "b7bda63a",
    "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
    "requestAccess()": "eb2f4817",
    "seenDeliveryVaaHashes(bytes32)": "180f6cc2",
    "sendCrossChainmessage(uint16,address,string)": "5519a372",
    "settleAndGetAssertionResult()": "bc1dbc52",
    "toggleActive()": "29c68dc1",
    "totalAccess()": "d0e4c04a",
    "umaAddress()": "ecbfb29a",
    "wormholeRelayer()": "da25b725"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_assertion\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_wormholeRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_umaAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"AccessEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"crossChainSet\",\"type\":\"bool\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertTruth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossChainAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestmessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oov3\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"}],\"name\":\"quoteCrossChainmessage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestAccess\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"seenDeliveryVaaHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"sendCrossChainmessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleAndGetAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"umaAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DataContract.sol\":\"DataContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@axelar-network/=node_modules/@axelar-network/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":@wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/wormhole-solidity-sdk/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/wormhole-solidity-sdk/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"contracts/DataContract.sol\":{\"keccak256\":\"0x1f1c437882e8157d52f878011a04265979213df3f90a281e9cc73110a42c6300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51c02ef6e1f1dad7b17818846408249d33ad967908f582a7eb71290c5a6d8c89\",\"dweb:/ipfs/QmNjqXCaWG9kc9c226eMetRMBb2oiB6dmU2jnu8EeYwbzv\"]},\"lib/wormhole-solidity-sdk/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x795d0ddb313e097be7a16d7ff0cce2b50f93955a05cdc68bf6cf7df8ee23cfc1\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://803421c2d0cf4f0727a3fa3450921973004865f161476a0f1869ae396ff2689a\",\"dweb:/ipfs/QmXWHXY2NgLHN9ebGXCzqwH3n53EWT4z9MdGtrFdPHm4Di\"]},\"lib/wormhole-solidity-sdk/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0x1517fe326d98cf485334ae07709fe7065b517a09305891d7961a53c5d30fb089\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://cea6bb6d686e003e3c2e91e9270926fed0c94a9c48dbeebf68af7c1231fa8aa7\",\"dweb:/ipfs/Qmato7ZRk8Ro3we6Kj7SdkqB5uGUrBhT7tvBnYg3CNQXe9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_cid",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_assertion",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_wormholeRelayer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_umaAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_buyer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AccessEvent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "message",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "sourceChain",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "crossChainSet",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageReceived",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "active",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruth"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crossChainAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crossChainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.Assertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
                  "name": "escalationManagerSettings",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "arbitrateViaEscalationManager",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "discardOracle",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "validateDisputers",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "assertingCaller",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "escalationManager",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "assertionTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settled",
                  "type": "bool"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settlementResolution",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "bond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "callbackRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadata",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestmessage",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oov3",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "targetChain",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "quoteCrossChainmessage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cost",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint16",
              "name": "sourceChain",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "deliveryHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "receiveWormholeMessages"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "requestAccess",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "seenDeliveryVaaHashes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "targetChain",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "targetAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sendCrossChainmessage"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAndGetAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleActive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccess",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "umaAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormholeRelayer",
          "outputs": [
            {
              "internalType": "contract IWormholeRelayer",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@across-protocol/=node_modules/@across-protocol/",
        "@axelar-network/=node_modules/@axelar-network/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@gnosis.pm/=node_modules/@gnosis.pm/",
        "@maticnetwork/=node_modules/@maticnetwork/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uma/=node_modules/@uma/",
        "@uniswap/=node_modules/@uniswap/",
        "@wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/wormhole-solidity-sdk/lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/wormhole-solidity-sdk/lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/DataContract.sol": "DataContract"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DataContract.sol": {
        "keccak256": "0x1f1c437882e8157d52f878011a04265979213df3f90a281e9cc73110a42c6300",
        "urls": [
          "bzz-raw://51c02ef6e1f1dad7b17818846408249d33ad967908f582a7eb71290c5a6d8c89",
          "dweb:/ipfs/QmNjqXCaWG9kc9c226eMetRMBb2oiB6dmU2jnu8EeYwbzv"
        ],
        "license": "MIT"
      },
      "lib/wormhole-solidity-sdk/src/interfaces/IWormholeReceiver.sol": {
        "keccak256": "0x795d0ddb313e097be7a16d7ff0cce2b50f93955a05cdc68bf6cf7df8ee23cfc1",
        "urls": [
          "bzz-raw://803421c2d0cf4f0727a3fa3450921973004865f161476a0f1869ae396ff2689a",
          "dweb:/ipfs/QmXWHXY2NgLHN9ebGXCzqwH3n53EWT4z9MdGtrFdPHm4Di"
        ],
        "license": "Apache 2"
      },
      "lib/wormhole-solidity-sdk/src/interfaces/IWormholeRelayer.sol": {
        "keccak256": "0x1517fe326d98cf485334ae07709fe7065b517a09305891d7961a53c5d30fb089",
        "urls": [
          "bzz-raw://cea6bb6d686e003e3c2e91e9270926fed0c94a9c48dbeebf68af7c1231fa8aa7",
          "dweb:/ipfs/Qmato7ZRk8Ro3we6Kj7SdkqB5uGUrBhT7tvBnYg3CNQXe9"
        ],
        "license": "Apache 2"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00",
        "urls": [
          "bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871",
          "dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/DataContract.sol",
    "id": 436,
    "exportedSymbols": {
      "DataContract": [
        435
      ],
      "DeliveryProviderCannotReceivePayment": [
        794
      ],
      "DeliveryProviderDoesNotSupportTargetChain": [
        792
      ],
      "IERC20": [
        938
      ],
      "IWormholeReceiver": [
        454
      ],
      "IWormholeRelayer": [
        775
      ],
      "IWormholeRelayerBase": [
        479
      ],
      "IWormholeRelayerDelivery": [
        770
      ],
      "IWormholeRelayerSend": [
        721
      ],
      "InsufficientRelayerFunds": [
        856
      ],
      "InvalidDeliveryVaa": [
        820
      ],
      "InvalidEmitter": [
        828
      ],
      "InvalidMsgValue": [
        784
      ],
      "InvalidOverrideGasLimit": [
        846
      ],
      "InvalidOverrideReceiverValue": [
        848
      ],
      "InvalidOverrideRefundPerGasUnused": [
        850
      ],
      "InvalidPayloadId": [
        806
      ],
      "InvalidPayloadLength": [
        812
      ],
      "InvalidVaaKeyType": [
        816
      ],
      "NotAnEvmAddress": [
        860
      ],
      "OptimisticOracleV3Interface": [
        1128
      ],
      "RETURNDATA_TRUNCATION_THRESHOLD": [
        778
      ],
      "ReentrantDelivery": [
        800
      ],
      "RequestedGasLimitTooLow": [
        786
      ],
      "RequesterNotWormholeRelayer": [
        840
      ],
      "TargetChainIsNotThisChain": [
        844
      ],
      "VaaKey": [
        463
      ],
      "VaaKeysDoNotMatchVaas": [
        838
      ],
      "VaaKeysLengthDoesNotMatchVaasLength": [
        834
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:6932:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "0:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "68:68:0",
        "nodes": [],
        "absolutePath": "lib/wormhole-solidity-sdk/src/interfaces/IWormholeRelayer.sol",
        "file": "@wormhole-solidity-sdk/src/interfaces/IWormholeRelayer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 436,
        "sourceUnit": 861,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "137:69:0",
        "nodes": [],
        "absolutePath": "lib/wormhole-solidity-sdk/src/interfaces/IWormholeReceiver.sol",
        "file": "@wormhole-solidity-sdk/src/interfaces/IWormholeReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 436,
        "sourceUnit": 455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "276:93:0",
        "nodes": [],
        "absolutePath": "node_modules/@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "@uma/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 436,
        "sourceUnit": 1129,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 435,
        "nodeType": "ContractDefinition",
        "src": "800:6131:0",
        "nodes": [
          {
            "id": 8,
            "nodeType": "VariableDeclaration",
            "src": "849:23:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d5f39488",
            "mutability": "mutable",
            "name": "deployer",
            "nameLocation": "864:8:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "849:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 10,
            "nodeType": "VariableDeclaration",
            "src": "912:18:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "cid",
            "nameLocation": "927:3:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "912:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 12,
            "nodeType": "VariableDeclaration",
            "src": "1000:18:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "02fb0c5e",
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "1012:6:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1000:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 14,
            "nodeType": "VariableDeclaration",
            "src": "1089:26:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d0e4c04a",
            "mutability": "mutable",
            "name": "totalAccess",
            "nameLocation": "1104:11:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 17,
            "nodeType": "VariableDeclaration",
            "src": "1150:49:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "da25b725",
            "mutability": "immutable",
            "name": "wormholeRelayer",
            "nameLocation": "1184:15:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
              "typeString": "contract IWormholeRelayer"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IWormholeRelayer",
                "nameLocations": [
                  "1150:16:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 775,
                "src": "1150:16:0"
              },
              "referencedDeclaration": 775,
              "src": "1150:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                "typeString": "contract IWormholeRelayer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20,
            "nodeType": "VariableDeclaration",
            "src": "1205:35:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "GAS_LIMIT",
            "nameLocation": "1222:9:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1205:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35305f303030",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1234:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000_by_1",
                "typeString": "int_const 50000"
              },
              "value": "50_000"
            },
            "visibility": "internal"
          },
          {
            "id": 22,
            "nodeType": "VariableDeclaration",
            "src": "1246:27:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "76f64722",
            "mutability": "mutable",
            "name": "latestmessage",
            "nameLocation": "1260:13:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1246:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24,
            "nodeType": "VariableDeclaration",
            "src": "1280:25:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "ecbfb29a",
            "mutability": "mutable",
            "name": "umaAddress",
            "nameLocation": "1295:10:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1280:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26,
            "nodeType": "VariableDeclaration",
            "src": "1312:19:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "1327:4:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 25,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1312:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "1337:26:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "description",
            "nameLocation": "1352:11:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 27,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1337:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32,
            "nodeType": "VariableDeclaration",
            "src": "1370:53:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "180f6cc2",
            "mutability": "mutable",
            "name": "seenDeliveryVaaHashes",
            "nameLocation": "1402:21:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1378:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1370:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 30,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1389:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35,
            "nodeType": "VariableDeclaration",
            "src": "1430:39:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "21d06bfd",
            "mutability": "mutable",
            "name": "oov3",
            "nameLocation": "1465:4:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
              "typeString": "contract OptimisticOracleV3Interface"
            },
            "typeName": {
              "id": 34,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33,
                "name": "OptimisticOracleV3Interface",
                "nameLocations": [
                  "1430:27:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1128,
                "src": "1430:27:0"
              },
              "referencedDeclaration": 1128,
              "src": "1430:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                "typeString": "contract OptimisticOracleV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "1685:24:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "assertion",
            "nameLocation": "1700:9:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1685:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 39,
            "nodeType": "VariableDeclaration",
            "src": "1715:31:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "allowedAddresses",
            "nameLocation": "1730:16:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 38,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1715:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 41,
            "nodeType": "VariableDeclaration",
            "src": "1752:27:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "assertedClaim",
            "nameLocation": "1766:13:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 40,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1752:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "private"
          },
          {
            "id": 43,
            "nodeType": "VariableDeclaration",
            "src": "1785:26:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d80da74",
            "mutability": "mutable",
            "name": "assertionId",
            "nameLocation": "1800:11:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 42,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1785:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45,
            "nodeType": "VariableDeclaration",
            "src": "1818:32:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "59910010",
            "mutability": "mutable",
            "name": "crossChainAddress",
            "nameLocation": "1833:17:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1818:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47,
            "nodeType": "VariableDeclaration",
            "src": "1856:27:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "a2d2cb64",
            "mutability": "mutable",
            "name": "crossChainId",
            "nameLocation": "1871:12:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1856:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49,
            "nodeType": "VariableDeclaration",
            "src": "1890:26:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "crossChainSet",
            "nameLocation": "1903:13:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 48,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1890:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 64,
            "nodeType": "FunctionDefinition",
            "src": "1923:153:0",
            "nodes": [],
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1953:123:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1963:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55,
                          "name": "assertedClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2019:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 58,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2054:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DataContract_$435",
                                "typeString": "contract DataContract"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DataContract_$435",
                                "typeString": "contract DataContract"
                              }
                            ],
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2046:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2046:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2046:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 53,
                          "name": "oov3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1977:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                            "typeString": "contract OptimisticOracleV3Interface"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1982:23:0",
                        "memberName": "assertTruthWithDefaults",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1010,
                        "src": "1977:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,address) external returns (bytes32)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1977:92:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1963:106:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:106:0"
                }
              ]
            },
            "functionSelector": "3421390b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertTruth",
            "nameLocation": "1932:11:0",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1943:2:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:0"
            },
            "scope": 435,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75,
            "nodeType": "FunctionDefinition",
            "src": "2082:130:0",
            "nodes": [],
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "2143:69:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2193:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 69,
                        "name": "oov3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2160:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2165:27:0",
                      "memberName": "settleAndGetAssertionResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1057,
                      "src": "2160:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) external returns (bool)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 73,
                  "nodeType": "Return",
                  "src": "2153:52:0"
                }
              ]
            },
            "functionSelector": "bc1dbc52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAndGetAssertionResult",
            "nameLocation": "2091:27:0",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "2137:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2136:6:0"
            },
            "scope": 435,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86,
            "nodeType": "FunctionDefinition",
            "src": "2218:117:0",
            "nodes": [],
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "2275:60:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2316:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 80,
                        "name": "oov3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2292:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2297:18:0",
                      "memberName": "getAssertionResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1065,
                      "src": "2292:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view external returns (bool)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2292:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 79,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "2285:43:0"
                }
              ]
            },
            "functionSelector": "7facaf3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionResult",
            "nameLocation": "2227:18:0",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2245:2:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "2269:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2268:6:0"
            },
            "scope": 435,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98,
            "nodeType": "FunctionDefinition",
            "src": "2341:173:0",
            "nodes": [],
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "2460:54:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2495:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "oov3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2477:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                          "typeString": "contract OptimisticOracleV3Interface"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2482:12:0",
                      "memberName": "getAssertion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "2477:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Assertion_$980_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct OptimisticOracleV3Interface.Assertion memory)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$980_memory_ptr",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                    }
                  },
                  "functionReturnParameters": 91,
                  "id": 96,
                  "nodeType": "Return",
                  "src": "2470:37:0"
                }
              ]
            },
            "functionSelector": "9a3ddabc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertion",
            "nameLocation": "2350:12:0",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "2410:44:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Assertion_$980_memory_ptr",
                    "typeString": "struct OptimisticOracleV3Interface.Assertion"
                  },
                  "typeName": {
                    "id": 89,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88,
                      "name": "OptimisticOracleV3Interface.Assertion",
                      "nameLocations": [
                        "2410:27:0",
                        "2438:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 980,
                      "src": "2410:37:0"
                    },
                    "referencedDeclaration": 980,
                    "src": "2410:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$980_storage_ptr",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2409:46:0"
            },
            "scope": 435,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102,
            "nodeType": "VariableDeclaration",
            "src": "2520:41:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "95a078e8",
            "mutability": "mutable",
            "name": "hasAccess",
            "nameLocation": "2552:9:0",
            "scope": 435,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 101,
              "keyType": {
                "id": 99,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2528:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2520:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 100,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2539:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 174,
            "nodeType": "FunctionDefinition",
            "src": "2568:639:0",
            "nodes": [],
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "2776:431:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "wormholeRelayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2786:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                        "typeString": "contract IWormholeRelayer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 119,
                          "name": "_wormholeRelayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "2821:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 118,
                        "name": "IWormholeRelayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2804:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWormholeRelayer_$775_$",
                          "typeString": "type(contract IWormholeRelayer)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2804:34:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                        "typeString": "contract IWormholeRelayer"
                      }
                    },
                    "src": "2786:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                      "typeString": "contract IWormholeRelayer"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:52:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2848:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 124,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2859:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2863:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2859:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2848:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:21:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2879:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "2886:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2879:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:12:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2901:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "2915:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2901:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:26:0"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "assertion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2937:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "_assertion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "2949:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2937:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2937:22:0"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "assertedClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2969:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 143,
                          "name": "_assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2991:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2985:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2985:5:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2985:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2969:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:33:0"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 147,
                      "name": "umaAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3012:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 148,
                      "name": "_umaAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "3025:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3012:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:24:0"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151,
                      "name": "cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3046:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 152,
                      "name": "_cid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "3052:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3046:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "3046:10:0"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3066:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3075:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3066:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:13:0"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 159,
                      "name": "crossChainSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "3089:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3105:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3089:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:21:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 163,
                      "name": "totalAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3120:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3134:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3120:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:15:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 167,
                      "name": "oov3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3144:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 169,
                          "name": "_umaAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "3188:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 168,
                        "name": "OptimisticOracleV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "3160:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$1128_$",
                          "typeString": "type(contract OptimisticOracleV3Interface)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3160:40:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                        "typeString": "contract OptimisticOracleV3Interface"
                      }
                    },
                    "src": "3144:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$1128",
                      "typeString": "contract OptimisticOracleV3Interface"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:56:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_cid",
                  "nameLocation": "2603:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2589:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_assertion",
                  "nameLocation": "2631:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2617:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2617:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2665:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2651:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2651:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "2694:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2680:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_wormholeRelayer",
                  "nameLocation": "2724:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2716:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_umaAddress",
                  "nameLocation": "2758:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2750:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:196:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:0:0"
            },
            "scope": 435,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 178,
            "nodeType": "EventDefinition",
            "src": "3213:42:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c61ed738fdb5ae470891e799ee05c5149522b99392909272ea3daa6653aa44cb",
            "name": "AccessEvent",
            "nameLocation": "3219:11:0",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "3247:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3231:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3231:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3230:24:0"
            }
          },
          {
            "id": 188,
            "nodeType": "EventDefinition",
            "src": "3260:132:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "45e975a123661fb415a685f327147d0eaf9ebd346b122269f45ca64afed63e0b",
            "name": "MessageReceived",
            "nameLocation": "3266:15:0",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "3298:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3291:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3291:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceChain",
                  "nameLocation": "3322:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3315:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3351:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3343:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3343:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "crossChainSet",
                  "nameLocation": "3372:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3367:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3281:110:0"
            }
          },
          {
            "id": 246,
            "nodeType": "FunctionDefinition",
            "src": "3398:953:0",
            "nodes": [],
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "3462:889:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 194,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3480:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420776173206d61726b656420696e6163746976652062792063726561746f72",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3488:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a09a5376a202cf55a638dcd31817b3e385e66deae6ced5ddd9806c03c1b37bc3",
                          "typeString": "literal_string \"Contract was marked inactive by creator\""
                        },
                        "value": "Contract was marked inactive by creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a09a5376a202cf55a638dcd31817b3e385e66deae6ced5ddd9806c03c1b37bc3",
                          "typeString": "literal_string \"Contract was marked inactive by creator\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3472:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:58:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 198,
                        "name": "assertedClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3602:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3616:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3602:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3626:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3602:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "nodeType": "IfStatement",
                  "src": "3598:319:0",
                  "trueBody": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "3629:288:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 203,
                                "name": "getAssertionResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "3750:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3750:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417373657274696f6e206973206e6f7420747275652c2063616e6e6f742061636365737320646174612e2043616c6c20617373657274547275746820616e6420736574746c65416e64476574417373657274696f6e526573756c7420746f207665726966792e",
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3788:104:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59738dbad959ce3d8a945eaeff4620c71aecdc8c88bbc315e5bb75e4c1827c0a",
                                "typeString": "literal_string \"Assertion is not true, cannot access data. Call assertTruth and settleAndGetAssertionResult to verify.\""
                              },
                              "value": "Assertion is not true, cannot access data. Call assertTruth and settleAndGetAssertionResult to verify."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59738dbad959ce3d8a945eaeff4620c71aecdc8c88bbc315e5bb75e4c1827c0a",
                                "typeString": "literal_string \"Assertion is not true, cannot access data. Call assertTruth and settleAndGetAssertionResult to verify.\""
                              }
                            ],
                            "id": 202,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3725:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3725:181:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "3725:181:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 210,
                      "name": "crossChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4007:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4023:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4007:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "nodeType": "IfStatement",
                  "src": "4003:163:0",
                  "trueBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "4026:140:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 214,
                              "name": "crossChainSet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "4065:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43726f737320636861696e207472616e73616374696f6e20726571756972656d656e74206e6f74206d6574",
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4096:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2795a6283bfee7b4187d1881eca093c2a6ce146fe061f3c3b65dd010347827ae",
                                "typeString": "literal_string \"Cross chain transaction requirement not met\""
                              },
                              "value": "Cross chain transaction requirement not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2795a6283bfee7b4187d1881eca093c2a6ce146fe061f3c3b65dd010347827ae",
                                "typeString": "literal_string \"Cross chain transaction requirement not met\""
                              }
                            ],
                            "id": 213,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4040:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4040:115:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "ExpressionStatement",
                        "src": "4040:115:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4180:22:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 220,
                        "name": "hasAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "4181:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 223,
                      "indexExpression": {
                        "expression": {
                          "id": 221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4191:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4195:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4191:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4181:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "IfStatement",
                  "src": "4176:111:0",
                  "trueBody": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "4204:83:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 226,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4235:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4239:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4235:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 225,
                            "name": "AccessEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "4223:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4223:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 229,
                        "nodeType": "EmitStatement",
                        "src": "4218:28:0"
                      },
                      {
                        "expression": {
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 230,
                            "name": "totalAccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "4260:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4275:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4260:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "4260:16:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 236,
                        "name": "hasAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "4296:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 239,
                      "indexExpression": {
                        "expression": {
                          "id": 237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4306:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4310:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4306:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4296:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4320:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4296:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "4296:28:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "name": "cid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "4341:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 192,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "4334:10:0"
                }
              ]
            },
            "functionSelector": "eb2f4817",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestAccess",
            "nameLocation": "3407:13:0",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3420:2:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "3447:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:15:0"
            },
            "scope": 435,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 285,
            "nodeType": "FunctionDefinition",
            "src": "4357:562:0",
            "nodes": [],
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "4649:270:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 267,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4680:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 268,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "4698:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 269,
                            "name": "hasAccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "4723:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 272,
                          "indexExpression": {
                            "expression": {
                              "id": 270,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4733:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4737:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4733:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4723:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "",
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4753:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4723:32:0",
                        "trueExpression": {
                          "id": 273,
                          "name": "cid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "4747:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 276,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4769:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 277,
                        "name": "crossChainAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "4792:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 278,
                        "name": "crossChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "4823:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 279,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "4849:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 280,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4871:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 281,
                        "name": "totalAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "4891:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 282,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4666:246:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_memory_ptr_$_t_string_storage_$_t_address_$_t_uint256_$_t_address_$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,string storage ref,string memory,string storage ref,address,uint256,address,bool,uint256)"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 283,
                  "nodeType": "Return",
                  "src": "4659:253:0"
                }
              ]
            },
            "functionSelector": "7a5b4f59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMetadata",
            "nameLocation": "4366:11:0",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4377:2:0"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4438:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4465:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4492:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4519:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4546:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4546:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4567:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4588:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4588:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4609:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4627:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4424:220:0"
            },
            "scope": 435,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 301,
            "nodeType": "FunctionDefinition",
            "src": "4925:105:0",
            "nodes": [],
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "4956:74:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 289,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4974:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4978:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4974:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 291,
                          "name": "deployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "4988:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4974:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4966:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:31:0"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 295,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "5007:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "5016:7:0",
                      "subExpression": {
                        "id": 296,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "5017:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5007:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:16:0"
                }
              ]
            },
            "functionSelector": "29c68dc1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toggleActive",
            "nameLocation": "4934:12:0",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4946:2:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4956:0:0"
            },
            "scope": 435,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 319,
            "nodeType": "FunctionDefinition",
            "src": "5036:239:0",
            "nodes": [],
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "5137:138:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 308,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "5148:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 309,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5147:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 312,
                          "name": "targetChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "5209:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5234:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 314,
                          "name": "GAS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "5249:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 310,
                          "name": "wormholeRelayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "5158:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                            "typeString": "contract IWormholeRelayer"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5174:21:0",
                        "memberName": "quoteEVMDeliveryPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 670,
                        "src": "5158:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5158:110:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "5147:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "5147:121:0"
                }
              ]
            },
            "functionSelector": "b7bda63a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteCrossChainmessage",
            "nameLocation": "5045:22:0",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "targetChain",
                  "nameLocation": "5084:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "5077:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5067:34:0"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "cost",
                  "nameLocation": "5131:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "5123:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5123:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5122:14:0"
            },
            "scope": 435,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 359,
            "nodeType": "FunctionDefinition",
            "src": "5281:519:0",
            "nodes": [],
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "5423:377:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "5441:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "5433:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5433:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "targetChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "5471:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 330,
                      "name": "quoteCrossChainmessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "5448:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint16) view returns (uint256)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5448:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5433:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 335,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5501:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5505:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5501:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 337,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "5514:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5501:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5493:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5493:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "5493:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 346,
                        "name": "targetChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "5588:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 347,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5613:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 350,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "5651:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 351,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5660:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5664:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5660:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 348,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5640:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5644:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5640:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5640:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5696:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 355,
                        "name": "GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5774:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 341,
                          "name": "wormholeRelayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "5529:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                            "typeString": "contract IWormholeRelayer"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5545:16:0",
                        "memberName": "sendPayloadToEvm",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 498,
                        "src": "5529:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint16,address,bytes memory,uint256,uint256) payable external returns (uint64)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 344,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "5569:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5529:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint64_$value",
                        "typeString": "function (uint16,address,bytes memory,uint256,uint256) payable external returns (uint64)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:264:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:264:0"
                }
              ]
            },
            "functionSelector": "5519a372",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCrossChainmessage",
            "nameLocation": "5290:21:0",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "targetChain",
                  "nameLocation": "5328:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "5321:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5321:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "5357:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "5349:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "5394:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "5380:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5380:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5311:96:0"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5423:0:0"
            },
            "scope": 435,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 434,
            "nodeType": "FunctionDefinition",
            "src": "5806:1123:0",
            "nodes": [],
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "6179:750:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 375,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6197:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6201:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6197:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 379,
                              "name": "wormholeRelayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "6219:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                                "typeString": "contract IWormholeRelayer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IWormholeRelayer_$775",
                                "typeString": "contract IWormholeRelayer"
                              }
                            ],
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6211:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 377,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6211:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6211:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6197:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792072656c6179657220616c6c6f776564",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6237:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9b87a1445fe2b92c5176bdcd5f057d31fed4d1c9c5a4bf0a4ddbc2b1d3b95e0",
                          "typeString": "literal_string \"Only relayer allowed\""
                        },
                        "value": "Only relayer allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9b87a1445fe2b92c5176bdcd5f057d31fed4d1c9c5a4bf0a4ddbc2b1d3b95e0",
                          "typeString": "literal_string \"Only relayer allowed\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6189:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6189:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "6189:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6334:36:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 386,
                            "name": "seenDeliveryVaaHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "6335:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 388,
                          "indexExpression": {
                            "id": 387,
                            "name": "deliveryHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "6357:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6335:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65737361676520616c72656164792070726f636573736564",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6384:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce52e83d839057c6eded6c3ade48bb15cfa535fddf47c137ba979ab4aea203cc",
                          "typeString": "literal_string \"Message already processed\""
                        },
                        "value": "Message already processed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce52e83d839057c6eded6c3ade48bb15cfa535fddf47c137ba979ab4aea203cc",
                          "typeString": "literal_string \"Message already processed\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6313:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "6313:108:0"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 393,
                        "name": "seenDeliveryVaaHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "6431:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "id": 394,
                        "name": "deliveryHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "6453:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6431:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6469:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6431:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "6431:42:0"
                },
                {
                  "assignments": [
                    400,
                    402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "6562:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "6548:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6548:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 402,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "6579:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "6571:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 401,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6571:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "6613:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6635:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 406,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6635:6:0",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6643:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 408,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6643:7:0",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 410,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6634:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(string storage pointer),type(address))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(string storage pointer),type(address))"
                        }
                      ],
                      "expression": {
                        "id": 403,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6589:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6593:6:0",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6589:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6589:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_payable_$",
                      "typeString": "tuple(string memory,address payable)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6547:114:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 413,
                        "name": "crossChainAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6742:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 414,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "6763:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6742:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 416,
                        "name": "crossChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "6773:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 417,
                        "name": "sourceChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "6789:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "6773:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6742:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "6738:109:0",
                  "trueBody": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "6802:45:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 420,
                            "name": "crossChainSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6816:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6832:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6816:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "6816:20:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 427,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "6878:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 428,
                        "name": "sourceChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "6887:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 429,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "6900:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 430,
                        "name": "crossChainSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "6908:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 426,
                      "name": "MessageReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "6862:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint16_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,uint16,address,bool)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6862:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "EmitStatement",
                  "src": "6857:65:0"
                }
              ]
            },
            "baseFunctions": [
              453
            ],
            "functionSelector": "529dca32",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveWormholeMessages",
            "nameLocation": "5815:23:0",
            "overrides": {
              "id": 372,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6170:8:0"
            },
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "5861:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "5848:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5848:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "5878:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 362,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5878:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 363,
                    "nodeType": "ArrayTypeName",
                    "src": "5878:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "5920:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "sourceChain",
                  "nameLocation": "6019:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "6012:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6012:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "deliveryHash",
                  "nameLocation": "6048:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "6040:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5838:316:0"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6179:0:0"
            },
            "scope": 435,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IWormholeReceiver",
              "nameLocations": [
                "825:17:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 454,
              "src": "825:17:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "825:17:0"
          }
        ],
        "canonicalName": "DataContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          435,
          454
        ],
        "name": "DataContract",
        "nameLocation": "809:12:0",
        "scope": 436,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}